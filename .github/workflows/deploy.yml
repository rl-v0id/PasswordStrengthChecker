name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Validate application
      run: |
        python -c "import streamlit; import app; print('‚úÖ All imports successful')"
        echo "‚úÖ Application validation completed"

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image (test)
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: password-strength-checker:test
        platforms: linux/amd64
        outputs: type=docker
    
    - name: Test Docker image
      run: |
        docker run --rm -d -p 8501:8501 --name test-container password-strength-checker:test
        sleep 10
        curl -f http://localhost:8501/healthz || echo "Health check available in production"
        docker stop test-container || true

  deploy-streamlit-cloud:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    - name: Streamlit Cloud Ready
      run: |
        echo "‚úÖ Repository ready for Streamlit Cloud deployment"
        echo "üöÄ Connect at: https://share.streamlit.io/"
        echo "üìÅ Repository: ${{ github.repository }}"

  # Optional: Deploy to Docker Hub (requires secrets)
  # Uncomment and add secrets: DOCKERHUB_USERNAME, DOCKERHUB_TOKEN
  # deploy-docker-hub:
  #   needs: build-docker
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Build and push
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: .
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/password-strength-checker:latest

  # Optional: Deploy to Heroku (requires secrets)
  # Uncomment and add secrets: HEROKU_API_KEY, HEROKU_APP_NAME, HEROKU_EMAIL
  # deploy-heroku:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Deploy to Heroku
  #     uses: akhileshns/heroku-deploy@v3.12.12
  #     with:
  #       heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #       heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
  #       heroku_email: ${{ secrets.HEROKU_EMAIL }}